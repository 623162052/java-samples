读取并解析XML文档：
遍历XML树
创建XML
文件输出



数据岛？

从数据库读取内容到xml

**********************************************************************************************************************************8
XML
	作用：	存储数据，传输数据
	
	语法：	1.头标记之间不能有任何字符(空格也算字符)
			2.所有的标记元素都是自定义的
			3.只有一个跟标记
			4.一个标记必须有结束标记，并且必须正确嵌套
			5.属性值必须由引号引起来（单引号或双引号）
				//数据本省有双引号则改为单引号；若有单引号，用双引号；双引号单引号都有用转义符
			6.转义符，XML中叫实体（Entity）
				&lt;	---		<
				&gt;	---		>
				&amp;	---		&
				&quot;	---		"
				&apos;	---		'
				
				//使用下面的标记可以直接写特殊符号
				<![CDATA[
					//里面可以写特殊符号
				]]>
				
			7.注释	
				<!--
					注释
				-->
			8.命名空间
				用命名空间区分同名元素
						
	DTD	(Document Type Definition 文档类型定义)		
			
			<!DOCTYPE 根元素 [
				<!ELEMENT 根元素 (子元素*)>			<!--出现子元素多个-->
				<!ELEMENT 子元素 (子元素1, 子元素2..., 子元素n )>		<!--子元素顺序锁定-->		
				<!ElEMENT 子元素1 (#PCDATA)>				<!--单纯文本数据-->
				<!ELEMENT 子元素2 (孙元素1+)>				<!--?:零个或一个；*零个或多个；+一个或多个-->
				<!ELEMENT 子元素3 (孙元素1, 孙元素2, 孙元素3)>
				<!ELEMENT 子元素n-1 ANY>						<!--子元素或内容不受限制-->
				<!ELEMENT 子元素n EMPTY>						<!--设置空元素-->
				
				<!ATTLIST 根元素 属性1 CDATA #REQUIRE 
								 属性2 CDATA #IMPLIED>					<!--属性列表，此处假设根元素有属性。
																		CDATA： 纯文本
																		#REQUIRE: 必须出现
																		#IMPLIED: 可有可无-->
			]>
			
			//DTD可以单独定义一个文件，然后再其他XML文件引用
			引用格式：
				<!DOCTYPE 根元素 SYSTEM "dtd文件名">
			
			
	Java处理 XML
		SAX	：	Simple API for XMl
				从头开始依次读文档数据，独到开始标签，触发监听器
		
		DOM	:	Document Object Model		(官方规范)(内存中会生成树)
				从根开始处理成树状结构
				
		DOM4J:	DOM for Java
				
			
			